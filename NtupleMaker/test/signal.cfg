# -*-sh-*-
process B  = {

    service = MessageLogger {
	untracked vstring destinations = { "cerr" }
	untracked PSet cerr = { untracked string threshold = "INFO"    } 
    }  

  untracked PSet maxEvents = {untracked int32 input = 100}
  untracked PSet options = {
    untracked vstring Rethrow = {"ProductNotFound"}
  }
             
  source = PoolSource {
    untracked vstring fileNames = {
    '/store/mc/2007/11/21/CSA07-WZ_incl-1195629996/0015/00312C5D-399C-DC11-9397-000E0C3E45A0.root',
    '/store/mc/2007/11/21/CSA07-WZ_incl-1195629996/0015/00358AC4-2E9C-DC11-AFED-001617DBD574.root',
    '/store/mc/2007/11/21/CSA07-WZ_incl-1195629996/0015/00DDBB8B-4C9C-DC11-9F22-00304885AC6C.root',
    '/store/mc/2007/11/21/CSA07-WZ_incl-1195629996/0015/00F124FD-4E9C-DC11-8307-000E0C3F092F.root',
    '/store/mc/2007/11/21/CSA07-WZ_incl-1195629996/0015/022DCFE6-319C-DC11-8513-001617C3B702.root'
    }
    untracked uint32 skipEvents = 0
  }

  #used only for the CSA07 soups!!!!!
  #module csa07EventWeightProducer = CSA07EventWeightProducer {
  #  InputTag src = source
  #  untracked bool talkToMe = true 
  #  double overallLumi = 1000.
  #  double ttKfactor = 1.
  #}

  # Jet corrections, MCJetCorrections in TQAF

  # define JetCorrector es_sources only
  #
  # Define the correction services for each algorithm.
  #
  es_source L4EMFJetCorrectorIcone5 = L4EMFCorrectionService {
    string tagName = 'Spring07_L4EMF_Iterative_Cone_05'
    string label = 'L4EMFJetCorrectorIcone5' 
    }

  es_source L4EMFJetCorrectorIcone7 = L4EMFCorrectionService {
    string tagName = 'Spring07_L4EMF_Iterative_Cone_05'
    string label = 'L4EMFJetCorrectorIcone7' 
  }

  es_source L4EMFJetCorrectorMcone5 = L4EMFCorrectionService {
    string tagName = 'Spring07_L4EMF_Iterative_Cone_05'
    string label = 'L4EMFJetCorrectorMcone5' 
  }

  es_source L4EMFJetCorrectorMcone7 = L4EMFCorrectionService {
    string tagName = 'Spring07_L4EMF_Iterative_Cone_05'
    string label = 'L4EMFJetCorrectorMcone7' 
  }

  es_source MCJetCorrectorFastjet6 = MCJetCorrectionService {
    string tagName = 'Spring07_Fastjet_6'
    string label = 'MCJetCorrectorFastjet6'
  }
 
  es_source MCJetCorrectorFastjet10 = MCJetCorrectionService {
    string tagName = 'Spring07_Fastjet_10'
    string label = 'MCJetCorrectorFastjet10'
  }

  #   
  #   Define the producers of corrected jet collections for each algorithm.
  #
  module L4EMFJetCorJetIcone5 = JetCorrectionProducer {
    InputTag src   = iterativeCone5CaloJets
    vstring correctors = {"MCJetCorrectorIcone5", "L4EMFJetCorrectorIcone5"}
    untracked string alias = "L4EMFJetCorJetIcone5"
  }

  module MCJetCorJetFastjet6 = JetCorrectionProducer {
    InputTag src = fastjet6CaloJets
    vstring correctors = {"MCJetCorrectorFastjet6"}
    untracked string alias = "MCJetCorJetFastjet6"
  }
  
  module MCJetCorJetFastjet10 = JetCorrectionProducer {
    InputTag src = fastjet10CaloJets
    vstring correctors = {"MCJetCorrectorFastjet10"}
    untracked string alias = "MCJetCorJetFastjet10"
  }

  sequence JetCorrectionsExtra = {  
    MCJetCorJetFastjet6, 
    L4EMFJetCorJetIcone5
  }

  sequence JetCorrection = {
    MCJetCorrections,
    JetCorrectionsExtra
  }

  # convert GenParticleCandidates to GenParticles
  include "PhysicsTools/HepMCCandAlgos/data/genParticleCandidates2GenParticles.cfi"

  # TQAF
  include "TopQuarkAnalysis/TopObjectProducers/data/TQAFLayer1.cff"

  # do replace on the original module (safer against replaces elsewhere for other parameters
  replace allLayer1TopJets.doJetCleaning = false

  #added
  replace allLayer1TopElectrons.addLRValues = false
  replace allLayer1TopMuons.addLRValues = false
  replace allLayer1TopTaus.addLRValues = false
  replace allLayer1TopElectrons.addResolutions = false
  replace allLayer1TopMuons.addResolutions = false
  replace allLayer1TopTaus.addResolutions = false
  replace allLayer1TopJets.addResolutions = false
  replace allLayer1TopMETs.addResolutions = false


  sequence tq = {
    tqafHighLevelReco,
    allLayer1TopElectrons,
    allLayer1TopMuons,
    allLayer1TopTaus,
    allLayer1TopJets,
    allLayer1TopMETs
  }
	
  module l1DigiMaker  = L1DigiMaker {} 

  # CMS2 includes
  include "CMS2/NtupleMaker/data/eventMaker.cfi"
  include "CMS2/NtupleMaker/data/csa07InfoMaker.cfi"
  include "CMS2/NtupleMaker/data/jetMaker.cfi"
  include "CMS2/NtupleMaker/data/jetToMuAssMaker.cfi"
  include "CMS2/NtupleMaker/data/jetToElAssMaker.cfi"
  include "CMS2/NtupleMaker/data/tqJetMaker.cfi"    
  include "CMS2/NtupleMaker/data/electronMaker.cfi"
  include "CMS2/NtupleMaker/data/elCaloIsoMaker.cfi"
  include "CMS2/NtupleMaker/data/tqElectronMaker.cfi" 
  include "CMS2/NtupleMaker/data/metMaker.cfi" 
  include "CMS2/NtupleMaker/data/genMaker.cfi"
  include "CMS2/NtupleMaker/data/muonMaker.cfi"
  include "CMS2/NtupleMaker/data/trackerMuonSequence.cff"
  include "CMS2/NtupleMaker/data/trackMaker.cfi"
  include "CMS2/NtupleMaker/data/tqMuonMaker.cfi"
  include "CMS2/NtupleMaker/data/muToElsAssMaker.cfi"
  include "CMS2/NtupleMaker/data/muToJetAssMaker.cfi"
  include "CMS2/NtupleMaker/data/muToTrackAssMaker.cfi"
  include "CMS2/NtupleMaker/data/elToTrackAssMaker.cfi"
  include "CMS2/NtupleMaker/data/elToMuAssMaker.cfi"
  include "CMS2/NtupleMaker/data/trackToElsAssMaker.cfi"
  include "CMS2/NtupleMaker/data/trackToMuonAssMaker.cfi"
  include "CMS2/NtupleMaker/data/candToGenAssMaker.cfi"
  include "CMS2/NtupleMaker/data/hypDilepMaker.cfi"
  include "CMS2/NtupleMaker/data/hypTrilepMaker.cfi"
  include "CMS2/NtupleMaker/data/hypQuadlepMaker.cfi"
  include "CMS2/NtupleMaker/data/wwCutMaker.cfi"
  include "CMS2/NtupleMaker/data/theFilter.cfi"
  include "CMS2/NtupleMaker/data/duplicateFilter.cfi"
  include "CMS2/NtupleMaker/data/trkMuonFilter.cfi"
  include "CMS2/NtupleMaker/data/trkJetMaker.cfi"
  include "CMS2/NtupleMaker/data/genJetMaker.cfi"

  sequence makers = {
    muonMaker,
    trackerMuonSequence,
    electronMaker,
    elCaloIsoMaker,
    jetMaker,
    trackMaker,
    localTrkColl,
    subTrkColl,
    iterativeCone5TrkJets,
    trkJetMaker,
    genParticlesAllStables,
    iterativeCone5StGenJets,
    trkColl,
    iterativeCone5AllTrkJets,
    alltrkJetMaker,
    genJetMaker
  }

  sequence tqmakers = {
    tqMuonMaker,
    tqElectronMaker,
    tqJetMaker
  }

  sequence assmakers = {
     jetToMuAssMaker,
     jetToElAssMaker,
     muToElsAssMaker,
     muToJetAssMaker,
     muToTrackAssMaker,
     elToTrackAssMaker,
     elToMuAssMaker,
     trackToElsAssMaker,
     trackToMuonAssMaker,
     candToGenAssMaker
  }

  sequence generalmakers = {
     eventMaker,
     #csa07InfoMaker,
     metMaker,
     l1DigiMaker,
     genMaker
  }

  sequence hypmaker = {
    hypDilepMaker,
    wwCutMaker,
    hypTrilepMaker,
    hypQuadlepMaker
  }

  sequence cms2 = {
    makers,
    tqmakers,
    generalmakers,
    assmakers,
    hypmaker
  }

  # this is how duplicates would be removed:
#  replace duplicateFilter.removeEvents = { 
#      "1789  69              2.095867e-02            6.986735e+01           -7.118644e-01           -1.525631e+00" 
#  }

  include "CMS2/NtupleMaker/data/EventContent.cff"
  module outMod = PoolOutputModule {
    untracked string fileName = 'ntuple_signal.root'
    using AODSIMCMS2EventContentNoPF
    # no AODSIM:
    # using CMS2EventContent
  }

  path p = { 
    genParticles, 
    #csa07EventWeightProducer, 
    JetCorrection, 
    tq,
    cms2 
  }
  
  endpath outpath = { theFilter, outMod }
      
}
